-- Ex7.25
sublist :: String -> String -> Bool
sublist _ [] = False
sublist [] _ = True
sublist (x:xs) (y:ys)
 | x == y = sublist xs ys
 | x /= y = sublist (x:xs) ys

subseq :: String -> String -> Bool
subseq (x:xs) [] = False
subseq (x:xs) (y:ys)
 | (x == y) && xs == (take (length xs) ys) = True
 | (x:xs) == (take (length (x:xs)) ys) = True
 | otherwise = subseq (x:xs) ys


-- Ex7.29
joinLine :: Line -> String
joinLine [] = []
joinLine (a:[]) = a
joinLine (a:b) = a ++ " " ++ joinLine b

joinNewLine :: Line -> String
joinNewLine [] = []
joinNewLine (a:[]) = a ++ "\n "
joinNewLine (a:b) = a ++ "\n" ++ joinNewLine b

joinLines :: [Line] -> String
joinLines a = joinNewLine ( map joinLine a )
