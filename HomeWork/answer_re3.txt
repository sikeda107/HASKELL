-- Ex9.6
Proof:
[] ++ [] = [] ---(base)
(x:xs) ++ [] = (x:xs) ---(ind)
xs ++ [] = xs ---(hyp)

Base P([])
 We look separately at the two sides of (base).
 left-hand side,
 [] ++ []
 = []

 right-hand side,
 []

 which shows their equality.

Induction P(xs) => P(x:xs)
 First we look at the left-hand side of (ind)
 (x:xs) ++ []
 by (hyp)
 = (x:(xs ++ [])
 = (x:(xs))
 = (x:xs)

 Now, the right-hand side of (ind) is
 (x:xs)

 This shows that (ind) follows from (hyp),completing the second half of the proof and so the proof itself.

Proof:
[] ++ (ys ++ zs) = ([] ++ ys) ++ zs  ----(base)
(x:xs) ++ (ys ++ zs) = ((x:xs) ++ ys) ++ zs ----(ind)
xs ++ (ys ++ zs) = (xs ++ ys) ++ zs ----(hyp)
Base P([])
 We look separately at the two sides of (base).
 left-hand side,
  [] ++ (ys ++ zs)
= (ys ++ zs)
=  ys ++ zs

 right-hand side,
  ([] ++ ys) ++ zs
= (ys) ++ zs
=  ys  ++ zs
 which shows their equality.

Induction P(xs) => P(x:xs)
 First we look at the left-hand side of (ind)
(x:xs) ++ (ys ++ zs)
 by (hyp)
 = (x:xs) ++ (ys ++ zs)
 = x : (xs ++ (ys ++ zs))
 = x : ((xs ++ ys) ++ zs)

 Now, looking at the right-hand side of (ind) we get
((x:xs) ++ ys) ++ zs
 by (hyp)
 = (x : ( xs ++ ys)) ++ zs
 = x : ((xs ++ ys) ++ zs)

 This shows that (ind) follows from (hyp), completing the second half of the proof and so the proof itself.

-- Ex10.15
lastf :: a -> [a] -> [a]
lastf x [] = [x]
lastf x xs = xs

last xs = foldr lastf [] xs

-- initf :: a -> [a] -> [a]
-- initf x [] = []
-- initf x xs = (x:xs)
--
-- init xs = foldr initf [] xs

unzipf :: (a,a) -> ([a],[a]) -> ([a],[a])
unzipf (x,y) (xs,ys) = (x:xs, y:ys)

unzip xs = foldr unzipf ([],[]) xs
